#!/usr/bin/env ruby
require 'driller/version'
require 'driller/uri_helper'
require 'fileutils'
require "rubygems"
require "anemone"

URL = ARGV[0]

Anemone.crawl(URL) do |anemone|

anemone.depth_limit = ARGV[1]

anemone.focus_crawl do |page|
  page.links.select { |url| url.starts_with? URL }
end

file = File.new('valid_pages.html', 'w')
file = File.new('broken.html', 'w')
file = File.new('slow_pages.html', 'w')

anemone.on_every_page do |page|

  if page.code = 200 && page.code = 301
    file = File.open('valid_pages.html', 'a')
    file.puts page.url
  end

  if page.code != 200 && page.code != 301
    puts "=======broken======\n"
    puts page.url
    file = File.open('broken.html', 'a')
    file.puts page.url
  end


  if page.response_time > 5000
    puts "=======Slow Page======\n"
    puts page.url
    file = File.open('slow_pages.html', 'a')
    file.puts page.url
  end
end
end


def print_usage
  puts <<EOF

  Usage: driller <command-name> [parameters] [options]

  <command-name> can be one of
    help
      prints more detailed help information.
    url and depth
      crawl the url and reports error pages and slow paged upto depth level specified 
    version
      prints the gem version

  <options> can be
     -v, --verbose   Turns on verbose logging
EOF
end

def print_help
  puts <<EOF

  Usage: driller <command-name>

  <command-name> can be one of
    help
    version

    Commands:
      help : prints more detailed help information.

      version : prints the gem version

  <Options>
      -v, --verbose  Turns on verbose logging
EOF
end


if (ARGV.length == 0)
  print_usage
else
	cmd = ARGV.shift
	if cmd == "help"
  		print_help
	elsif cmd == "version"
		puts Driller::VERSION
  	else
  		print_usage
	end
end
